---
- hosts: pipelines
  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded

  tasks:
    - name: Create volumes for container
      file:
        name: /opt/{{ pipelines_name }}/{{ item }}
        owner: 999
        group: 999
        state: directory
      with_items:
        - workspace
        - data
        - home

    - name: Create extra volumes for container (k8s)
      file:
        name: /opt/{{ pipelines_name }}/home/{{ item }}
        state: directory
        owner: 999
        group: 999
      with_items:
        - .config
        - .kube

    - name: Create private SSH key for container
      user: 
        name: root
        generate_ssh_key: yes
        ssh_key_file: /opt/{{ pipelines_name }}/id_rsa
        ssh_key_comment: 'SSH key for pipelines {{ pipelines_name }}'

    - name: Change Ownership of the SSH key to belong to pipelines (999:999)
      file:
        name: /opt/{{ pipelines_name }}/{{ item }}
        owner: 999
        group: 999
      with_items:
        - id_rsa
        - id_rsa.pub

    - name: Add bootstrap pipelines yaml file
      copy: 
        src: bootstrap.yml
        dest: /opt/{{ pipelines_name }}/workspace
        owner: 999
        group: 999

    - name: Start {{ pipelines_name }}
      docker_container:
        name: "{{ pipelines_name }}"
        image: "{{ docker_registry }}/pipelines:latest"
        state: started
        pull: true
        restart: true
        restart_policy: always
        hostname: "{{ pipelines_name }}"
        log_driver: json-file
        log_options:
          max-size: "5m"
          max-file: "50"
        env:
          ADMIN_PASS: '{{ pipelines_admin_pass }}'
        volumes:
          - /opt/{{ pipelines_name }}/workspace:/workspace
          - /opt/{{ pipelines_name }}/data:/data
          - /opt/{{ pipelines_name }}/home/.config:/home/pipelines/.config
          - /opt/{{ pipelines_name }}/home/.kube:/home/pipelines/.kube
          - /opt/{{ pipelines_name }}/id_rsa:/home/pipelines/.ssh/id_rsa:ro
          - /opt/{{ pipelines_name }}/id_rsa.pub:/home/pipelines/.ssh/id_rsa.pub:ro

    - name: Get IP address of the new pipelines
      command: |
        docker inspect --format '{{'{{ .NetworkSettings.IPAddress }}'}}' {{ pipelines_name }}
      register: container_ip

    - name: Create new upstream config
      template:
        src: upstream.conf.j2
        dest: /etc/nginx/conf.d/upstream_{{ pipelines_name }}.conf
      notify: reload nginx

    - name: Add DNS entry to cloudflare
      uri:
        url: "https://api.cloudflare.com/client/v4/zones/{{ cloudflare_zone_id }}/dns_records"
        method: POST
        headers:
          X-Auth-Email: "{{ cloudflare_email }}"
          X-Auth-Key: "{{ cloudflare_key }}"
          Content-Type: "application/json"
        body:
          type: CNAME
          name: pipelines-{{ pipelines_name }}.{{ service_domain }}
          content: pipelines.{{ service_domain }}
          ttl: 120
        body_format: json
